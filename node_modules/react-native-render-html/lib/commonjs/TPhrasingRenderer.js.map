{"version":3,"sources":["TPhrasingRenderer.ts"],"names":["TDefaultPhrasingRenderer","children","props","tnode","propsForChildren","TNodeChildrenRenderer","resolvedChildren","React","createElement","TDefaultTextualRenderer","InnerTPhrasingRenderer","assembledProps","Renderer","isGhostTNode","type","data","TPhrasingRenderer","sharedProps","bypassAnonymousTPhrasingNodes","tagName","length","enableExperimentalGhostLinesPrevention","every"],"mappings":";;;;;;;;AAAA;;AAEA;;AAGA;;AACA;;;;AAEO,MAAMA,wBAAqD,GAAG,CAAC;AACpEC,EAAAA,QADoE;AAEpE,KAAGC;AAFiE,CAAD,KAG/D;AACJ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA8BF,KAApC;AACA,QAAMG,qBAAqB,GAAG,yDAA9B;AACA,QAAMC,gBAAgB,GACpBL,QADoB,aACpBA,QADoB,cACpBA,QADoB,gBAEpBM,eAAMC,aAAN,CAAoBH,qBAApB,EAA2C;AACzCF,IAAAA,KADyC;AAEzCC,IAAAA;AAFyC,GAA3C,CAFF;AAMA,sBAAOG,eAAMC,aAAN,CAAoBC,gCAApB,EAA6CP,KAA7C,EAAoDI,gBAApD,CAAP;AACD,CAbM;;;;AAeP,SAASI,sBAAT,CAAgCR,KAAhC,EAAyE;AACvE,QAAM;AAAES,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA+B,sCACnCV,KADmC,EAEnCF,wBAFmC,CAArC;AAIA,sBAAOO,eAAMC,aAAN,CAAoBI,QAApB,EAA8BD,cAA9B,CAAP;AACD;;AAED,SAASE,YAAT,CAAsBV,KAAtB,EAAoC;AAClC,SACGA,KAAK,CAACW,IAAN,KAAe,MAAf,KAA0BX,KAAK,CAACY,IAAN,KAAe,EAAf,IAAqBZ,KAAK,CAACY,IAAN,KAAe,GAA9D,CAAD,IACAZ,KAAK,CAACW,IAAN,KAAe,OAFjB;AAID;;AAEc,SAASE,iBAAT,CACbd,KADa,EAEb;AACA,QAAMG,qBAAqB,GAAG,yDAA9B,CADA,CAEA;AACA;;AACA,MACEH,KAAK,CAACe,WAAN,CAAkBC,6BAAlB,IACAhB,KAAK,CAACC,KAAN,CAAYgB,OAAZ,IAAuB,IADvB,IAEAjB,KAAK,CAACC,KAAN,CAAYF,QAAZ,CAAqBmB,MAArB,IAA+B,CAHjC,EAIE;AACA,wBAAOb,eAAMC,aAAN,CAAoBH,qBAApB,EAA2C;AAChDF,MAAAA,KAAK,EAAED,KAAK,CAACC;AADmC,KAA3C,CAAP;AAGD;;AACD,MACED,KAAK,CAACe,WAAN,CAAkBI,sCAAlB,IACAnB,KAAK,CAACC,KAAN,CAAYgB,OAAZ,IAAuB,IADvB,IAEAjB,KAAK,CAACC,KAAN,CAAYF,QAAZ,CAAqBqB,KAArB,CAA2BT,YAA3B,CAHF,EAIE;AACA,WAAO,IAAP;AACD;;AACD,sBAAON,eAAMC,aAAN,CAAoBE,sBAApB,EAA4CR,KAA5C,CAAP;AACD","sourcesContent":["import React from 'react';\nimport { TNode, TPhrasing } from '@native-html/transient-render-engine';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport { TDefaultRenderer } from './shared-types';\nimport { TNodeSubRendererProps } from './internal-types';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport TDefaultTextualRenderer from './TDefaultTextualRenderer';\n\nexport const TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> = ({\n  children,\n  ...props\n}) => {\n  const { tnode, propsForChildren } = props;\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const resolvedChildren =\n    children ??\n    React.createElement(TNodeChildrenRenderer, {\n      tnode,\n      propsForChildren\n    });\n  return React.createElement(TDefaultTextualRenderer, props, resolvedChildren);\n};\n\nfunction InnerTPhrasingRenderer(props: TNodeSubRendererProps<TPhrasing>) {\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    props,\n    TDefaultPhrasingRenderer\n  );\n  return React.createElement(Renderer, assembledProps);\n}\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\nexport default function TPhrasingRenderer(\n  props: TNodeSubRendererProps<TPhrasing>\n) {\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  // When a TPhrasing node is anonymous and has only one child, its\n  // rendering amounts to rendering its only child.\n  if (\n    props.sharedProps.bypassAnonymousTPhrasingNodes &&\n    props.tnode.tagName == null &&\n    props.tnode.children.length <= 1\n  ) {\n    return React.createElement(TNodeChildrenRenderer, {\n      tnode: props.tnode\n    });\n  }\n  if (\n    props.sharedProps.enableExperimentalGhostLinesPrevention &&\n    props.tnode.tagName == null &&\n    props.tnode.children.every(isGhostTNode)\n  ) {\n    return null;\n  }\n  return React.createElement(InnerTPhrasingRenderer, props);\n}\n"]}