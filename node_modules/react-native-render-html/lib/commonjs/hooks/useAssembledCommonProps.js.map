{"version":3,"sources":["useAssembledCommonProps.ts"],"names":["useAssembledCommonProps","tnode","propsFromParent","sharedProps","renderIndex","renderLength","TDefault","Default","Custom","containerProps","assembledProps","TDefaultRenderer","style","collapsedMarginTop","getNativeStyles","type","propsForChildren","tagName","InternalRenderer","Renderer"],"mappings":";;;;;;;AAQA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACe,SAASA,uBAAT,CACb;AACEC,EAAAA,KADF;AAEEC,EAAAA,eAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,WAJF;AAKEC,EAAAA;AALF,CADa,EAQbC,QARa,EAYb;AAAA;;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsB,+CAAkBP,KAAlB,CAA5B;AACA,QAAMQ,cAAc,GAAG,oDAAvB;AACA,QAAMC,cAAiE,GAAG;AACxET,IAAAA,KADwE;AAExEC,IAAAA,eAFwE;AAGxEC,IAAAA,WAHwE;AAIxEQ,IAAAA,gBAAgB,EAAEL,QAJsD;AAKxEM,IAAAA,KAAK,EAAE,oCACLV,eADK,aACLA,eADK,uBACLA,eAAe,CAAEW,kBADZ,EAELZ,KAAK,CAACa,eAAN,EAFK,CALiE;AASxEC,IAAAA,IAAI,EAAEd,KAAK,CAACc,IAAN,KAAe,MAAf,IAAyBd,KAAK,CAACc,IAAN,KAAe,UAAxC,GAAqD,MAArD,GAA8D,OATI;AAUxEC,IAAAA,gBAAgB,EAAEf,KAAK,CAACgB,OAAN,GAAgB,EAAhB,GAAqBf,eAViC;AAWxEgB,IAAAA,gBAAgB,EAAEX,OAAO,IAAKD,QAX0C;AAYxEF,IAAAA,WAZwE;AAaxEC,IAAAA,YAbwE;AAcxE,OAAGI;AAdqE,GAA1E;AAgBA,SAAO;AACLC,IAAAA,cADK;AAELS,IAAAA,QAAQ,UAAGX,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAaD,OAAb,uCAAwBD;AAF3B,GAAP;AAID","sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport {\n  CustomRenderer,\n  CustomRendererProps,\n  TDefaultRenderer,\n  TDefaultRendererProps\n} from '../shared-types';\nimport { TNodeSubRendererProps } from '../internal-types';\nimport mergeCollapsedMargins from '../helpers/mergeCollapsedMargins';\nimport { useRendererConfig } from '../context/RenderRegistryProvider';\nimport { useDefaultContainerProps } from '../context/SharedPropsProvider';\n\n/**\n * @internal\n */\nexport default function useAssembledCommonProps<T extends TNode>(\n  {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    renderIndex,\n    renderLength\n  }: TNodeSubRendererProps<T>,\n  TDefault: TDefaultRenderer<T>\n): {\n  Renderer: CustomRenderer<T>;\n  assembledProps: CustomRendererProps<T> & TDefaultRendererProps<T>;\n} {\n  const { Default, Custom } = useRendererConfig(tnode);\n  const containerProps = useDefaultContainerProps();\n  const assembledProps: CustomRendererProps<T> & TDefaultRendererProps<T> = {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    TDefaultRenderer: TDefault,\n    style: mergeCollapsedMargins(\n      propsFromParent?.collapsedMarginTop,\n      tnode.getNativeStyles()\n    ) as any,\n    type: tnode.type === 'text' || tnode.type === 'phrasing' ? 'text' : 'block',\n    propsForChildren: tnode.tagName ? {} : propsFromParent,\n    InternalRenderer: Default || (TDefault as any),\n    renderIndex,\n    renderLength,\n    ...containerProps\n  };\n  return {\n    assembledProps,\n    Renderer: (Custom ?? Default ?? TDefault) as any\n  };\n}\n"]}